/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import TextProcess.*;
import edu.mit.jwi.IDictionary;
import edu.mit.jwi.IRAMDictionary;
import edu.stanford.nlp.trees.Tree;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;

/**
 *
 * @author anter_000
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseFileBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        evalForAllSubjTextArea = new javax.swing.JTextArea();
        teacherNameText = new javax.swing.JTextField();
        teacherNameLabel = new javax.swing.JLabel();
        subjectComboBox = new javax.swing.JComboBox<>();
        subjectLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        evalForOneSubjTextArea = new javax.swing.JTextArea();
        evaluationLabel = new javax.swing.JLabel();
        getEvalForSubjBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        analyzedTextArea = new javax.swing.JTextArea();
        evalForAllSubjLabel = new javax.swing.JLabel();
        analyzeBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chooseFileBtn.setText("Choose File");
        chooseFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileBtnActionPerformed(evt);
            }
        });

        evalForAllSubjTextArea.setEditable(false);
        evalForAllSubjTextArea.setColumns(20);
        evalForAllSubjTextArea.setLineWrap(true);
        evalForAllSubjTextArea.setRows(5);
        evalForAllSubjTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(evalForAllSubjTextArea);

        teacherNameText.setEditable(false);

        teacherNameLabel.setText("Teacher Name: ");

        subjectLabel.setText("Subject:");

        evalForOneSubjTextArea.setEditable(false);
        evalForOneSubjTextArea.setColumns(20);
        evalForOneSubjTextArea.setLineWrap(true);
        evalForOneSubjTextArea.setRows(5);
        evalForOneSubjTextArea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(evalForOneSubjTextArea);

        evaluationLabel.setText("Comments:");

        getEvalForSubjBtn.setText("Get Evaluation");
        getEvalForSubjBtn.setEnabled(false);
        getEvalForSubjBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getEvalForSubjBtnActionPerformed(evt);
            }
        });

        analyzedTextArea.setEditable(false);
        analyzedTextArea.setColumns(20);
        analyzedTextArea.setLineWrap(true);
        analyzedTextArea.setRows(5);
        jScrollPane3.setViewportView(analyzedTextArea);

        evalForAllSubjLabel.setText("Evalution for all subjects:");

        analyzeBtn.setText("Analyze Text");
        analyzeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyzeBtnActionPerformed(evt);
            }
        });

        jButton1.setText("Output sentences");
        jButton1.setName("outputSentenceButton"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputSentencesButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Clean Text Upload");
        jButton2.setName(""); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(subjectLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(269, 269, 269)
                        .addComponent(getEvalForSubjBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(teacherNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(teacherNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(evalForAllSubjLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chooseFileBtn))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 901, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(evaluationLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(analyzeBtn))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseFileBtn)
                    .addComponent(evalForAllSubjLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(teacherNameLabel)
                            .addComponent(teacherNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectLabel)
                    .addComponent(getEvalForSubjBtn))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(evaluationLabel)
                    .addComponent(analyzeBtn)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton2.getAccessibleContext().setAccessibleName("cleanTextButt\non");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser;
        fileChooser = new JFileChooser(new File("C:\\Users\\user\\Google Drive\\Current Thesis\\Resources\\Text Files"));
        int returnVal = fileChooser.showOpenDialog(fileChooser.getParent());
        String cleanedText = "";
            
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
                
            //This is where a real application would open the file.
            System.out.print("Opening: " + file.getName() + "." + "\n");
            System.out.print("" + file.getAbsolutePath() + "" + "\n");
                 
            evalForAllSubjTextArea.setText(""); //Empty text field
            
            //Fill with first clean up of text
            cleanedText += TextFilePreProcess.getImportantText(file);
            evalForAllSubjTextArea.append(cleanedText);
            evalForAllSubjTextArea.setCaretPosition(0);
            teacherNameText.setText(TextFilePreProcess.getTeacherName(cleanedText));
            subjectComboBox.removeAllItems();
            String[] subjects = TextFilePreProcess.getSubjects();
            for(String subject : subjects){
                subjectComboBox.addItem(subject);
            }
            getEvalForSubjBtn.setEnabled(true);
        } else {
            System.out.print("Open command cancelled by user." + "\n");
        }
    }//GEN-LAST:event_chooseFileBtnActionPerformed

    private void getEvalForSubjBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getEvalForSubjBtnActionPerformed
        // TODO add your handling code here:
        if(!teacherNameText.getText().isEmpty() && subjectComboBox.getItemCount() != 0){
            String subjectEval = TextFilePreProcess.getSubjectEvaluation(evalForAllSubjTextArea.getText(), subjectComboBox.getSelectedItem().toString());
            evalForOneSubjTextArea.setText("");
            evalForOneSubjTextArea.setText(subjectEval);
        }
    }//GEN-LAST:event_getEvalForSubjBtnActionPerformed

    private void analyzeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyzeBtnActionPerformed
        
        final long startTime = System.currentTimeMillis();
        
        String analyzedText = evalForOneSubjTextArea.getText();
        
//        SummarizeText.summarize(analyzedText);
//        SummarizeText.summarizeZeroOneNegative(analyzedText);
//        SummarizeText.getSentimentofWholeDocument(analyzedText);
//        SummarizeText.getSentimentofWholeDocumentWithNegation(analyzedText);
        SummarizeText.getSentimentofWholeDocumentWithNegationWithDisambiguation(analyzedText);
//        SummarizeText.listPosNeg();
//        SummarizeText.StoreImportantSentences();
        
//        analyzedTextArea.setText(SummarizeText.printPositiveNegativeStatements());
        
        final long endTime = System.currentTimeMillis();
        
        final long convertedToSeconds = (endTime - startTime)/1000;
        final long minutes = convertedToSeconds/60;
        final long seconds = convertedToSeconds%60;
        final long milliseconds = ((endTime - startTime)%1000);
        
        write("Total processing time: " + minutes + "min " + seconds + "sec " + milliseconds + "millisec");
        
    }//GEN-LAST:event_analyzeBtnActionPerformed

    private void outputSentencesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputSentencesButtonActionPerformed
        // TODO add your handling code here:
        try{
            TextFilePreProcess.outputSentencesCSV(evalForOneSubjTextArea.getText());
        }
        catch(FileNotFoundException exc){
            exc.printStackTrace();
        }
    }//GEN-LAST:event_outputSentencesButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser;
        fileChooser = new JFileChooser(new File("C:\\Users\\user\\Desktop\\IMDB\\aclImdb\\test"));
        int returnVal = fileChooser.showOpenDialog(fileChooser.getParent());
        String cleanedText = "";
            
//        if (returnVal == JFileChooser.APPROVE_OPTION) {
//            File file = fileChooser.getSelectedFile();
//                
//            //This is where a real application would open the file.
//            System.out.print("Opening: " + file.getName() + "." + "\n");
//            System.out.print("" + file.getAbsolutePath() + "" + "\n");
//                 
//            evalForAllSubjTextArea.setText(""); //Empty text field
//            
//            //Fill with first clean up of text
//            cleanedText += TextFilePreProcess.getImportantText(file);
//            evalForAllSubjTextArea.append(cleanedText);
//            evalForAllSubjTextArea.setCaretPosition(0);
//            teacherNameText.setText(TextFilePreProcess.getTeacherName(cleanedText));
//            subjectComboBox.removeAllItems();
//            String[] subjects = TextFilePreProcess.getSubjects();
//            for(String subject : subjects){
//                subjectComboBox.addItem(subject);
//            }
//            getEvalForSubjBtn.setEnabled(true);
//        } else {
//            System.out.print("Open command cancelled by user." + "\n");
//        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    
    private void write(String string){
        
        System.out.println(string);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analyzeBtn;
    private javax.swing.JTextArea analyzedTextArea;
    private javax.swing.JButton chooseFileBtn;
    private javax.swing.JLabel evalForAllSubjLabel;
    private javax.swing.JTextArea evalForAllSubjTextArea;
    private javax.swing.JTextArea evalForOneSubjTextArea;
    private javax.swing.JLabel evaluationLabel;
    private javax.swing.JButton getEvalForSubjBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> subjectComboBox;
    private javax.swing.JLabel subjectLabel;
    private javax.swing.JLabel teacherNameLabel;
    private javax.swing.JTextField teacherNameText;
    // End of variables declaration//GEN-END:variables
}
